<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.risk.plan.dao.SchemeMapper" >
  <resultMap id="BaseResultMap" type="com.risk.plan.entity.Scheme" >
    <id column="sid" property="sid" jdbcType="VARCHAR" />
    <result column="sname" property="sname" jdbcType="VARCHAR" />
    <result column="rname" property="rname" jdbcType="VARCHAR" />
    <result column="persum" property="persum" jdbcType="INTEGER" />
    <result column="fusum" property="fusum" jdbcType="INTEGER" />
    <result column="gosum" property="gosum" jdbcType="INTEGER" />
    <result column="percent" property="percent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    sid, sname, rname, persum, fusum, gosum, percent
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from scheme
    where sid = #{sid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from scheme
    where sid = #{sid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.risk.plan.entity.Scheme" >
    insert into scheme (sid, sname, rname, 
      persum, fusum, gosum, 
      percent)
    values (#{sid,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, #{rname,jdbcType=VARCHAR}, 
      #{persum,jdbcType=INTEGER}, #{fusum,jdbcType=INTEGER}, #{gosum,jdbcType=INTEGER}, 
      #{percent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.risk.plan.entity.Scheme" >
    insert into scheme
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="sname != null" >
        sname,
      </if>
      <if test="rname != null" >
        rname,
      </if>
      <if test="persum != null" >
        persum,
      </if>
      <if test="fusum != null" >
        fusum,
      </if>
      <if test="gosum != null" >
        gosum,
      </if>
      <if test="percent != null" >
        percent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="sname != null" >
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="rname != null" >
        #{rname,jdbcType=VARCHAR},
      </if>
      <if test="persum != null" >
        #{persum,jdbcType=INTEGER},
      </if>
      <if test="fusum != null" >
        #{fusum,jdbcType=INTEGER},
      </if>
      <if test="gosum != null" >
        #{gosum,jdbcType=INTEGER},
      </if>
      <if test="percent != null" >
        #{percent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.risk.plan.entity.Scheme" >
    update scheme
    <set >
      <if test="sname != null" >
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="rname != null" >
        rname = #{rname,jdbcType=VARCHAR},
      </if>
      <if test="persum != null" >
        persum = #{persum,jdbcType=INTEGER},
      </if>
      <if test="fusum != null" >
        fusum = #{fusum,jdbcType=INTEGER},
      </if>
      <if test="gosum != null" >
        gosum = #{gosum,jdbcType=INTEGER},
      </if>
      <if test="percent != null" >
        percent = #{percent,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.risk.plan.entity.Scheme" >
    update scheme
    set sname = #{sname,jdbcType=VARCHAR},
      rname = #{rname,jdbcType=VARCHAR},
      persum = #{persum,jdbcType=INTEGER},
      fusum = #{fusum,jdbcType=INTEGER},
      gosum = #{gosum,jdbcType=INTEGER},
      percent = #{percent,jdbcType=VARCHAR}
    where sid = #{sid,jdbcType=VARCHAR}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from scheme
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
  </select>
  <select id="findByParams" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from scheme
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
    <if test="pageSize != null and startNum != null" >
      limit #{pageSize} offset #{startNum}
    </if>
  </select>
  <select id="findByParamsCount" resultType="int" parameterType="map" >
    select count(*) from scheme
  </select>
</mapper>