<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risk.plan.dao.GoodsTypeMapper">
  <resultMap id="BaseResultMap" type="com.risk.plan.entity.GoodsType">
    <id column="goodstypeid" jdbcType="VARCHAR" property="goodstypeid" />
    <result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
    <result column="goodslimit" jdbcType="VARCHAR" property="goodslimit" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="subid" jdbcType="VARCHAR" property="subid" />
  </resultMap>
  <sql id="Base_Column_List">
    goodstypeid, goodsname, goodslimit, note, subid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goodstype
    where goodstypeid = #{goodstypeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from goodstype
    where goodstypeid = #{goodstypeid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.risk.plan.entity.GoodsType">
    insert into goodstype (goodstypeid, goodsname, goodslimit, 
      note, subid)
    values (#{goodstypeid,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, #{goodslimit,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{subid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.risk.plan.entity.GoodsType">
    insert into goodstype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodstypeid != null">
        goodstypeid,
      </if>
      <if test="goodsname != null">
        goodsname,
      </if>
      <if test="goodslimit != null">
        goodslimit,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="subid != null">
        subid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodstypeid != null">
        #{goodstypeid,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodslimit != null">
        #{goodslimit,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="subid != null">
        #{subid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.risk.plan.entity.GoodsType">
    update goodstype
    <set>
      <if test="goodsname != null">
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodslimit != null">
        goodslimit = #{goodslimit,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="subid != null">
        subid = #{subid,jdbcType=VARCHAR},
      </if>
    </set>
    where goodstypeid = #{goodstypeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.risk.plan.entity.GoodsType">
    update goodstype
    set goodsname = #{goodsname,jdbcType=VARCHAR},
      goodslimit = #{goodslimit,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      subid = #{subid,jdbcType=VARCHAR}
    where goodstypeid = #{goodstypeid,jdbcType=VARCHAR}
  </update>
  <select id="selectAll" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goodstype
    <if test="sortName != null">
      order by ${sortName}
      <if test="sortOrder != null">
        ${sortOrder}
      </if>
    </if>
  </select>
  <select id="findByParams" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goodstype
    <if test="sortName != null">
      order by ${sortName}
      <if test="sortOrder != null">
        ${sortOrder}
      </if>
    </if>
    <if test="pageSize != null and startNum != null">
      limit #{pageSize} offset #{startNum}
    </if>
  </select>
  <select id="findByParamsCount" parameterType="map" resultType="int">
    select count(*) from goodstype
  </select>
 </mapper>