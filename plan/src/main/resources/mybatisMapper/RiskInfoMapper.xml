<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.risk.plan.dao.RiskInfoMapper" >
  <resultMap id="BaseResultMap" type="com.risk.plan.entity.RiskInfo" >
    <id column="infoid" property="infoid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="input" property="input" jdbcType="VARCHAR" />
    <result column="out" property="out" jdbcType="VARCHAR" />
    <result column="perlimit" property="perlimit" jdbcType="INTEGER" />
    <result column="fulimit" property="fulimit" jdbcType="INTEGER" />
    <result column="golimit" property="golimit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    infoid, name, input, out, perlimit, fulimit, golimit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from riskinfo
    where infoid = #{infoid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from riskinfo
    where infoid = #{infoid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.risk.plan.entity.RiskInfo" >
    insert into riskinfo (infoid, name, input, 
      out, perlimit, fulimit, 
      golimit)
    values (#{infoid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{input,jdbcType=VARCHAR}, 
      #{out,jdbcType=VARCHAR}, #{perlimit,jdbcType=INTEGER}, #{fulimit,jdbcType=INTEGER}, 
      #{golimit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.risk.plan.entity.RiskInfo" >
    insert into riskinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="infoid != null" >
        infoid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="input != null" >
        input,
      </if>
      <if test="out != null" >
        out,
      </if>
      <if test="perlimit != null" >
        perlimit,
      </if>
      <if test="fulimit != null" >
        fulimit,
      </if>
      <if test="golimit != null" >
        golimit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="infoid != null" >
        #{infoid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="input != null" >
        #{input,jdbcType=VARCHAR},
      </if>
      <if test="out != null" >
        #{out,jdbcType=VARCHAR},
      </if>
      <if test="perlimit != null" >
        #{perlimit,jdbcType=INTEGER},
      </if>
      <if test="fulimit != null" >
        #{fulimit,jdbcType=INTEGER},
      </if>
      <if test="golimit != null" >
        #{golimit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.risk.plan.entity.RiskInfo" >
    update riskinfo
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="input != null" >
        input = #{input,jdbcType=VARCHAR},
      </if>
      <if test="out != null" >
        out = #{out,jdbcType=VARCHAR},
      </if>
      <if test="perlimit != null" >
        perlimit = #{perlimit,jdbcType=INTEGER},
      </if>
      <if test="fulimit != null" >
        fulimit = #{fulimit,jdbcType=INTEGER},
      </if>
      <if test="golimit != null" >
        golimit = #{golimit,jdbcType=INTEGER},
      </if>
    </set>
    where infoid = #{infoid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.risk.plan.entity.RiskInfo" >
    update riskinfo
    set name = #{name,jdbcType=VARCHAR},
      input = #{input,jdbcType=VARCHAR},
      out = #{out,jdbcType=VARCHAR},
      perlimit = #{perlimit,jdbcType=INTEGER},
      fulimit = #{fulimit,jdbcType=INTEGER},
      golimit = #{golimit,jdbcType=INTEGER}
    where infoid = #{infoid,jdbcType=VARCHAR}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from riskinfo
    <where>
     <if test="name != null" >
        name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="input != null" >
        input = #{input,jdbcType=VARCHAR}
      </if>
      <if test="out != null" >
        out = #{out,jdbcType=VARCHAR}
      </if>
      <if test="perlimit != null" >
        perlimit = #{perlimit,jdbcType=INTEGER}
      </if>
      <if test="fulimit != null" >
        fulimit = #{fulimit,jdbcType=INTEGER}
      </if>
      <if test="golimit != null" >
        golimit = #{golimit,jdbcType=INTEGER}
      </if>
    </where>
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
  </select>
  <select id="findByParams" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from riskinfo
    <where>
     <if test="name != null" >
        name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="input != null" >
        input = #{input,jdbcType=VARCHAR}
      </if>
      <if test="out != null" >
        out = #{out,jdbcType=VARCHAR}
      </if>
      <if test="perlimit != null" >
        perlimit = #{perlimit,jdbcType=INTEGER}
      </if>
      <if test="fulimit != null" >
        fulimit = #{fulimit,jdbcType=INTEGER}
      </if>
      <if test="golimit != null" >
        golimit = #{golimit,jdbcType=INTEGER}
      </if>
    </where>
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
    <if test="pageSize != null and startNum != null" >
      limit #{pageSize} offset #{startNum}
    </if>
  </select>
  <select id="findByParamsCount" resultType="int" parameterType="map" >
    select count(*) from riskinfo
  </select>
</mapper>